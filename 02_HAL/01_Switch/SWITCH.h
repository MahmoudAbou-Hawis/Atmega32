/*******************************************************************************/
/**
 * @file SWITCH.h
 * @brief this is the switch driver which contain all function which you want to 
 * to read the switch status and initialize all of switches
 *
 * @par Project Name
 * switch driver
 *
 * @par Code Language
 * C
 *
 * @par Description
 * this driver used to read status of each switch in the whole project
 *
 * @par Author
 * Mahmoud Abou-Hawis
 *
 ******************************************************************************/

/******************************************************************************/
/* MULTIPLE INCLUSION GUARD */
/******************************************************************************/
#ifndef SWITCH_H_
#define SWITCH_H_
/******************************************************************************/

/******************************************************************************/
/* C++ Style GUARD */
/******************************************************************************/
#ifdef __cplusplus
extern "C"
{
#endif /* __cplusplus */
/******************************************************************************/

/******************************************************************************/
/* INCLUDES */
/******************************************************************************/

#include "SWITCH_CFG.h"
/******************************************************************************/

/******************************************************************************/
/* PUBLIC DEFINES */
/******************************************************************************/


/******************************************************************************/

/******************************************************************************/
/* PUBLIC MACROS */
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/
/* PUBLIC ENUMS */
/******************************************************************************/

typedef enum
{
	/**
	*@brief  if the function done correctly.
	*/
	SWITCH_enuOK,
	
	/**
	*@brief if you entered wrong port while configuration.
	*/
	SWITCH_enuInvalidPort,
	
	/**
	*@brief if you entered wrong pin while configuration.
	*/
	SWITCH_enuInvalidPin,
	
	/**
	*@brief the switch which you want to read is not found.
	*/
	SWITCH_enuInvalidSwitch,
	
	/**
	*@brief this will return if the passed variable is NULL
	*/
	SWITCH_enuNullPtr,
	
	/**
	*@brief the pin is configured as output in another module.
	*/
	SWITCH_enuSwitchPinNotInput,
	
	/**
	*@brief the switch is not pull up or pull down.
	*/
	SWITCH_enuBadState
	
} SWITCH_enmErrors_t;

/******************************************************************************/

/******************************************************************************/
/* PUBLIC TYPES */
/******************************************************************************/


/******************************************************************************/

/******************************************************************************/
/* PUBLIC CONSTANT DECLARATIONS */
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/
/* PUBLIC VARIABLE DECLARATIONS */
/******************************************************************************/


/******************************************************************************/

/******************************************************************************/
/* PUBLIC FUNCTION PROTOTYPES */
/******************************************************************************/

/*----------------------------------------------------------------------------*/
/**
 * @brief							used to initialize all switches which you configured in switch_CFG.h
 * 	
 * @return							enum contain Error State
 * 
 * @note							you must configure all switches in SWITCH_CFG.h.
/*----------------------------------------------------------------------------*/
SWITCH_enmErrors_t SWITCH_enmInit(void);


/*----------------------------------------------------------------------------*/
/**
 * @brief							used for read the switch
 *
 * @param[in] Copy_u8SwitchId		refer to the switch id which you want to read
 * 									  
 * @param[in/out] ADD_cpu8PinValue	this attribute used for update the Switch status.
 *
 * @return enum contain Error State
 * 
 * @note you must use this function after configuring the PIN.
/*----------------------------------------------------------------------------*/
SWITCH_enmErrors_t SWITCH_enmReadSwitch(const uint8_t Copy_u8SwitchId, uint8_t * const  ADD_cpu8PinValue);


/******************************************************************************/

/******************************************************************************/
/* C++ Style GUARD */
/******************************************************************************/
#ifdef __cplusplus
}
#endif /* __cplusplus */
/******************************************************************************/

/******************************************************************************/
/* MULTIPLE INCLUSION GUARD */
/******************************************************************************/
#endif /* SWITCH_H_ */
/******************************************************************************/
